15*30
a <- 10
a
print(a)
ls
ls()
b <- 20
ls()
?data
data()
CO2
class(ls)
class(a)
a <- "this"
class(a)
library(dslabs)
data
datasets
ls(data)
data
data()
loading("dslabs")
install.packages("dslabs")
library(dslabs)
data("murders")
class(murders)
head(murders)
?data
str(murders)
head(murders)
murders$population
names(murders)
length(murders$population)
class(murders$state)
rate <- murders$total
class(rate)
max(rate)
class(murders$region)
murders$region
levels(murders$region)
codes <- c(380,124,818)
codes
codes <- c(a1=380, a2=124, a3=818)
codes
a1
class(codes)
str(codes)
a <- seq(1,10)
a
a[2:5]
a[c(2,5)]
names(a) <- c[a1,a2,a3,a4,a5,a6,a7,a8,a9,a10]
b <- c(3,6,9)
names(b) <- c("b1","b2","b3")
b
b[b1]
b["b1"]
order(murders$total)
murders$state[order(murders$total)]
murders$state[which.min(murders$total)]
murders[which.max(murders$population)]
murders$state[which.max(murders$population)]
m_rate <- murders$total / murders$population
head(m_rate)
mrders$state[which.max(m_rate)]
murders$state[which.max(m_rate)]
murders[which.max(m_rate)]
murders$state[order(m_rate)]
murders$state[order(m_rate,decreasing = TRUE)]
str(murders)
m_rate <- murders$total/murders$population
index <- m_rate <= 0.71
murders$state[index]
index
m_rate
m_rate <- m_rate *100000
murders$state[m_rate <=0.71]
murders$state[murders$region=="West" & m_rate <= 1]
m_rate
which(m_rate < 0.7)
x <- c("a","b","c","d","e")
y <- c("a","c","f")
y %in% x
y[y %in% x]
y [! y %in% x]
?which
library(dplyr)
install("dplyr")
install.packages("dplyr")
library(dplyr)
murders <- mutate(murders, rate=total/population *100000)
str(murders)
head(murders)
filter(murders, rate <1)
filter(murders, rate <=0.71)
new_table<-  select(murders, state, region, rate)
filter(new_table, rate<=0.71)
murders %>% select(state, region, rate) %>% filter(rate<=0.71)
grades <- data.frame(names=c("John","Juan","Jean","Yao"),)
grades <- data.frame(names=c("John","Juan","Jean","Yao"),
exam_1 = c(95,80,90,85),
exam_2 = c(90,85,85,90))
grades
class(grades$names)
class(grades$exam_1)
grades <- data.frame(names=c("John","Juan","Jean","Yao"),
+ exam_1 = c(95,80,90,85),
+ exam_2 = c(90,85,85,90), stringsAsFactors=FALSE)
grades <- data.frame(names=c("John","Juan","Jean","Yao"),
+ exam_1 = c(95,80,90,85),
+ exam_2 = c(90,85,85,90), stringsAsFactors=FALSE)
grades <- data.frame(names=c("John","Juan","Jean","Yao"),
+ exam_1 = c(95,80,90,85),
+ exam_2 = c(90,85,85,90),
grades <- data.frame(names=c("John","Juan","Jean","Yao"),
+ exam_1 = c(95,80,90,85),
+ exam_2 = c(90,85,85,90))
grades <- data.frame(names=c("John","Juan","Jean","Yao")
exam_1 = c(95,80,95,85),
grades <- data.frame(names=c("John","Juan","Jean","Yao"),
exam_1=c(95,80,90,85),
exam_2=c(90,85,85,90),
stringsAsFactors=FALSE)
grades
class(grades$names)
?select
pop_m <- murders$population/10^6
total_gun_m <- murders$total
plot(pop_m, total_gun_m)
hist(murders$rate)
murders$state[which.max(rate)]
murders$state[which.max(murders$rate)]
boxplot(rate~region, data=murders)
library(dslabs)
data("murders")
rate = murders$total/murders$population * 100000
which.min(rate)
murders$state[which.min(rate)]
rate[46]
a <- c(TRUE,FALSE, TRUE)
any(a)
all(a)
char_len <- nchar(murders$state)
char_len
library(dslabs)
data(murders)
str(murders)
p <- murders %>% ggplot(aes(population/10^6,total,label=abb))
p <- murders %>% ggplot(aes(population/10^6, total, labe=abb))
p <- ggplot(data=murders,aes(population/10^6,total,label=abb))
library(dplyr)
library(ggplot2)
p <- ggplot(data=murders,aes(population/10^6,total,label=abb))
p <- p+geom_point(aes(col=region),size=3) + geom_text(nudge_x=0.05) + scale_x_log10() + scale_y_log10()
p
r <- murders %>% + summarize(rate=sum(total)/sum(population) *10^6) %>% .$rate
r <- murders %>%  summarize(rate=sum(total)/sum(population) *10^6) %>% .$rate
r
p <- p+ geom_abline(intercept=log10(r))
p
pwd()
pwd
cwd
?wd
?setwd
getwd()
setwd("~/iCloud Drive (Archive)/Desktop/Desktop/EdX/Data Analysis/Harvard_Data_Analysis/Intro to Visualization")
?boxplot
?geom_plot
?geom_line
boxplot
?boxplot
library(gapminder)
data(gapminder)
pwd
getwd()
getwd()
cd ..
setwd(..)
getwd()
setwd("~/iCloud Drive (Archive)/Desktop/Desktop/EdX/Data Analysis/Harvard_Data_Analysis/Prob")
source("Week1.R")
fun1()
source("Week1.R")
fun1()
fun1()
fun1()
source("Week1.R")
fun1()
source("Week1.R")
fun1()
source("Week1.R")
fun1()
?prob.table
?prob
install.packags("statistics")
library(stats)
source("Week1.R")
fun1()
source("Week1.R")
fun1()
source("Week1.R")
fun1()
getwd()
beads <- rep(c("cyan","magenta","yellow"),times=c(3,5,7))
events <- sample(beads,1)
p <- prop.table(table(events))
p
events <- sample(beads,100000)
events <- sample(beads,100000,replace=TRUE)
p <- prop.table(table(events))
p
str(p)
p$cyan
p["cyan"]
