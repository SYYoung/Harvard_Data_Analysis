samp <- sample(area, 10)
sample_means10[i] <- mean(samp)
samp <- sample(area, 100)
sample_means100[i] <- mean(samp)
}
?par
par(mfrow = c(3,1))
xlimits = range(sample_means10)
hist(sample_means10, breaks=20, xlim=xlimits)
hist(sample_mans50, breaks=20, xlim=xlimits)
hist(sample_means50, breaks=20, xlim=xlimits)
hist(sample_means100, breaks=20, xlim=xlimits)
samp1 <- sample(price, 50)
summary(samp1)
summary(price)
hist(price)
hist(samp1)
sample_means50 <- rep(NA, 5000)
for (i in 1:5000) {
samp <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
summary(sample_means50)
data <- c(1,2,3,4,5,6,7,8,9,10)
summary(data)
sd(data)
load(url("http://www.openintro.org/stat/data/ames.RData"))
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
summary(population)
summary(samp)
sample_mean <- mean(samp)
sample_mean
se <- sd(samp)/sqrt(60)
lower <- sample_mean - 1.96*se
upper <- sample_mean + 1.96*se
c(lower,upper)
mean(population)
samp_mean <- rep(NA, 50)
samp_sd <- rep(NA, 50)
n <- 60
for (i in 1:50) {
samp <- sample(population, n)
samp_mean <- mean(samp)
samp_mean[i] <- mean(samp)
}
samp_mean <- rep(NA, 50)
samp_sd <- rep(NA, 50)
n <- 60
for (i in 1:50) {
samp <- sample(population, n)
samp_mean[i] <- mean(samp)
samp_sd[i] <- sd(samp)
}
samp_mean
samp_sd
lower <- samp_mean - 1.96*samp_sd/sqrt(n)
upper <- samp_mean + 1.96*samp_sd/sqrt(n)
c(lower, upper)
?plot_ci
plot_ci(lower, upper, mean(population))
qnorm(0.99)
qnorm(0.9)
qnorm(0.95)
?qnorm
qnorm(0.95, lower.tail=FALSE)
qnorm(0.95, lower.tail=TRUE)
pnorm(1.96)
pnorm(0.975)
qnorm(0.975)
qnorm(0.995)
lower <- samp_mean - 2.56*samp_sd/sqrt(n)
upper <- samp_mean + 2.56*samp_sd/sqrt(n)
c(lower, upper)
plot_ci(lower, upper, mean(population))
load(url("http://bit.ly/dasi_nc"))
dim(nc)
names(nc)
summary(nc)
names(nc)
gain = nc$gained
summary(gain)
hist(gain)
gain_clean = na.omit(nc$gained)
dim(gain_clean)
head(gain_clean)
length(gain_clean)
boot_means <- rep(NA, 100)
for (i in 1:100) {
}
n = length(gain_clean)
n
boot_means <- rep(NA, 100)
for (i in 1:100) {
boot_sample = sample(gain_clean, n, replace=TRUE)
boot_means[i] <- mean(boot_sample)
}
summary(boot_means)
hist(boot_means)
boot_means <- rep(NA, 100)
for (i in 1:100) {
boot_sample = sample(gain_clean, n, replace=TRUE)
}
boot_sd <- rep(NA, 100)
boot_means <- rep(NA, 100)
for (i in 1:100) {
boot_sample = sample(gain_clean, n, replace=TRUE)
boot_means[i] <- mean(boot_sample)
boot_sd[i] <- sd(boot_sample)
}
qnorm(0.975)
lower <- boot_means - 1.96*boot_sd/sqrt(n)
upper <- boot_means + 1.96*boot_sd/sqrt(n)
c(lower,upper)
plot_ci(lower, upper)
hist(samp_means)
hist(boot_means)
summary(boot_means)
sd(boot_means0)
sd(boot_means)
sd_error <- sd(boot_means)
m1 <- mean(boot_means)
lower <- mean - 1.96*sd_error/sqrt(100)
lower <- m1 - 1.96*sd_error/sqrt(100)
upper <- m1 + 1.96*sd_error/sqrt(100)
c(lower,upper)
qnorm(0.95)
qnorm(0.975)
m1 <- mean(boot_means)
sd_error <- sd(boot_means)
lower <- m1 - 1.96*sd_error
upper <- m1 + 1.96*sd_error
c(lower, upper)
hist(boot_means, breaks=20)
sort(boot_means)
source("http://bit.ly/dasi_inference")
inference(nc$gained, type="ci", method="simulation", conflevel=0.9, est="mean", boot_method="perc")
inference(nc$gained, type="ci", method="simulation", conflevel=0.9, est="mean", boot_method="se")
inference(nc$gained, type="ci", method="simulation", conflevel=0.9, est="median", boot_method="se")
inference(nc$fage, type="ci", method="simulation", conflevel=0.95, est="mean", boot_method="se")
names(nc)
type(nc$habit)
summary(nc$habit)
summary(nc$weight)
plot(x=nc$habit, y=nc$weight)
?by
by(nc$weight, nc$habit)
by(nc$weight, nc$habit, mean)
by(nc$weight, nc$habit, length)
inference(y=nc$weight, x=nc$habit, est="mean", type="ht", null=0, alternative="twosided", method="theoretical")
(1.3862*1.3862/126)
(1.5187*1.5187/873)
0.0152504+0.002641981
sqrt(0.01789)
?pnorm
0.3155/0.134
pnorm(2.359,0,0.134)
pnorm(2.359, 0, 0.134, lower.tail=FALSE)
inference(y=nc$weight, x=nc$habit, est="mean", type="ht", null=0, alternative="twosided", method="theoretical")
pnorm(0.3155, mean=0, sd=0.134)
2*(1-0.9907256)
inference(y=nc$weight, x=nc$habit, est="mean", type="ht", null=0, alternative="twosided", method="theoretical", order=c("smoker", "nonsmoker")
)
inference(y=nc$weight, x=nc$habit, est="mean", type="ci", null=0, alternative="twosided", method="theoretical", order=c("smoker", "nonsmoker")
}
inference(y=nc$weight, x=nc$habit, est="mean", type="ci", null=0, alternative="twosided", method="theoretical", order=c("smoker", "nonsmoker"))
names(nc)
head(nc$mature)
summary(nc$mage)
hist(nc$mage)
inference(y=nc$mage, x=nc$habit, est="mean", type="ci", null=0, alternative="twosided", method="theoretical", order=c("smoker", "nonsmoker"))
?by
by(nc$mage, nc$mature, mean)
by(nc$mage, nc$mature, summary)
names(nc)
summary(nc$marital)
inference(y=nc$weight, x=nc$marital, est="mean", type="ht", null=0, alternative="twosided", method="theoretical")
by(nc$weight, nc$marital, summary)
load(url("http://bit.ly/dasi_gss_ws_cl"))
?load
?source
?url
dim(gss)
names(gss)
by(gss$wordsum, gss$class, summary)
?inference
inference(y=gss$wordsum, x=gss$class, est="mean", type="ht", alternative="greater", method="theoretical")
?dotplot
outcomes = c("head", "tail")
?sample
sample(outcomes, 8, replace-TRUE)
sample(outcomes, 8, replace=TRUE)
samp_mean = rep(NA, 10)
for (i in 1:10) {
samp = sample(outcomes, 8 replace=TRUE)
samp_mean = rep(NA, 10)
for (i in 1:10) {
samp = sample(outcomes, 8 ,replace=TRUE)
samp_mean[i] <- mean(samp)/8
}
outcome = c(0,1)
samp_mean = rep(NA, 10)
for (i in 1:10) {
samp = sample(outcomes, 8, replace=TRUE)
samp_mean[i] <- sum(samp)/8
}
outcome=c(0,1)
samp_mean = rep(NA, 10)
samp = sample(outcomes, 8, replace=TRUE)
samp
samp = sample(outcome, 8, replace=TRUE)
samp
sum(samp)
sum(samp)/8
outcome=c(0,1)
samp_mean = rep(NA, 10)
for (i in 1:10) {
samp = sample(outcome, 8, replace=TRUE)
samp_mean[i] <- sum(samp)/8
}
samp_mean
dotplot(samp_mean)
?dotplot
dotplot(samp_mean)
?dotchart
dotchart(samp_mean)
samp_mean = rep(NA, 100)
for (i in 1:100) {
samp = sample(outcome, 8, replace=TRUE)
samp_mean[i] <- sum(samp)/8
}
samp_mean
dotchart(samp_mean)
source("http://bit.ly/dasi_inference")
inference(samp_mean, type="ht", null=0, alternative="onesided", method="theoretical")
inference(samp_mean, type="ht", null=0, alternative="onesided", method="theoretical", est="mean")
inference(samp_mean, type="ht", null=0, alternative="greater", method="theoretical", est="mean")
source("http://bit.ly/dasi_inference")
back = factor(c(rep("correct", 11), rep("incorrect", 1)))
inference(back, est="proportion", type="ht", method="simulation",success="correct", null=0.1, alternative="greater", nsim=100)
?factor
qt(0.975)
qt(0.975, df=25)
states =read.csv("http://bit.ly/dasi_states")
pov_slr = lm(poverty ~ female_house, data = states)
summary(pov_slr)
pov_mlr = lm(poverty~female_house+white, data=states)
summary(pov_mlr)
anova(pov_mlr)
cognitive = read.csv("http://bit.ly/dasi_cognitive")
cog_full = lm(kid_score ~ mom_hs + mom_iq + mom_work+mom_age, data=cognitive)
summary(cog_full)
source("http://bit.ly/dasi_inference")
us12=subset(athesim, athesim$nationality=="United States" & athesim$year=="2012")
us12=subset(atheism, atheism$nationality=="United States" & atheism$year=="2012")
athesim
atheism
load(url("http://www.openintro.org/stat/data/atheism.RData"))
atheism
us12=subset(atheism, atheism$nationality=="United States" & atheism$year=="2012")
us12
head(atheism)
atheism[1:30]
atheism[50]
atheism(1:40)
atheism[1:40]
us12
names(us12)
table(us12$response)
50/(50+952)
inference(us12$response, est="proportion", type="ci", method="theoretical", success="atheist")
1.96*0.0069
n<-1000
p<- seq(0,1,0.01)
me <- 2*sqrt(p*(1-p)/n)
plot(me ~ p)
spain12=subset(atheism, atheism$nationality=="Spain" & atheism$year=="2012")
spain12
table(spain12)
spain12
table(spain12$response)
spain12=subset(atheism, atheism$nationality=="Spain")
head(spain12)
table(spain12$response)
table(spain12$year)
?inference
table(spain12$response,spain$year)
?table
table(spain12$response,spain12$year)
spain0512 <- table(spain12$response,spain$year)
spain0512 <- table(spain12$response,spain12$year)
spain0512
load(url("http://www.openintro.org/stat/data/atheism.RData"))
spain0512 = subset(atheism, atheism$nationality=="Spain" )
head(spain0512)
table(spain0512$response, spain0512$year)
inference(spain$response, as.factor(spain$year), est="proportion",type="ht",null=0, success="atheist")
inference(spain0512$response, as.factor(spain0512$year), est="proportion",type="ht",null=0, success="atheist")
inference(spain0512$response, as.factor(spain0512$year), est="proportion",type="ht",null=0, success="atheist",alternative="twosided",method="theoretical")
us0512=subset(atheism, atheism$nationality=="United States")
head(us0512)
table(us0512$response, us0512$year)
inference(us0512$response, as.factor(us0512$year), est="proportion",type="ht",null=0, success="atheist",alternative="twosided",method="theoretical")
load(url("http://www.openintro.org/stat/data/mlb11.RData"))
names(run)
head(mlb11)
?scatter_plot
?plot
plot(mlb11$at_bats,mlb11$runs)
cor(mlb11$runs, mlb11$at_bats)
plot_ss(x=mlb11$at_bats, y=mlb11$runs)
plot_ss(x=mlb11$at_bats, y=mlb11$runs, showSquares=TRUE)
plot_ss(x=mlb11$at_bats, y=mlb11$runs, showSquares=TRUE)
?plot_ss
plot_ss(x=mlb11$at_bats, y=mlb11$runs, showSquares=TRUE)
plot_ss(x=mlb11$at_bats, y=mlb11$runs, showSquares=TRUE)
m1 <- lm(runs ~ at_bats, data=mlb11)
summary(m1)
m2 <- lm(runs~homeruns, data=mlb11)
summary(m2)
plot(mlb11$runs ~ mlb11$at_bats)
abline(m1)
5579*1.8345+415.2389
summary(m1)
5579*0.6305-2789.2429
(600-728.3)
128*128
plot(m1$residuals ~ mlb11$at_bats)
abline(h=0, lty=3) #adds a horizontal dashed line at y = 0
hist(m1$residuals)
qqnorm(m1$residuals)
qqline(m1$residuals)
plot(m1$residuals ~ mlb11$at_bats)
abline(h=0, lty=3) #adds a horizontal dashed line at y = 0
summary(m1)
summary(m2)
names(mlb11)
m_wins <-lm(runs~wins, data=mlb11)
summary(m_wins)
m_hits <-lm(runs~hits, data=mlb11)
summary(m_hits)
summary(mlb11)
names(mlb11)
m_bat_avg <-lm(runs~bat_avg, data=mlb11)
summary(m_bat_avg)
m_obs <-lm(runs~obs, data=mlb11)
m_obs <-lm(runs~new_obs, data=mlb11)
summary(m_obs)
m_slug <-lm(runs~new_slug, data=mlb11)
summary(m_slug)
m_base <-lm(runs~new_onbase, data=mlb11)
summary(m_base)
hist(m1$residuals)
qqnorm(m1$residuals)
qqline(m1$residuals)
load(url("http://www.openintro.org/stat/data/evals.RData"))
head(evals)
names(evals)
summary(evals$score)
hist(evals$score)
plot(evals$rank, evals$gender)
plot(evals$score, evals$gender)
table(evals$gender, evals$score)
plot(evals$score ~ evals$bty_avg)
?jitter
jitter(evals$score~evals$bty_avg)
jitter(evals$score~jitter(evals$bty_avg))
summary(evals$bty_avg)
jitter(evals$btg_avg)
m_bty<-lm(score,bty_avg,data=evals)
m_bty<-lm(score~bty_avg,data=evals)
summary(m_bty)
plot(evals$score,evals$bty_avg)
plot(evals$bty_avg, evals$score)
abline(mbty)
abline(m_bty)
plot(evals$bty_avg ~ evals$bty_f1lower)
cor(evals$bty_avg, evals$bty_f1lower)
plot(evals[,13:19])
m_bty_gen <- lm(score~bty_avg+gender, data=evals)
summary(m_bty_gen)
multiLines(m_bty_gen)
m_bty_rank <- lm(score~bty_avg+rank, data=evals)
summary(m_bty_rank)
m_bty_rank <- lm(score~bty_avg+rank, data=evals)
plot(evals$scores, evals$rank)
?hist
table(evals$scores, evals$rank)
summar(m_bty_rank)
summary(m_bty_rank)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
find.package("devtools")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("car")
install.packages("pbkrtest")
setwd("~/Desktop/c/EdX/PH125_2x/Intro to Visualization")
library(tidyverse)
data(heights)
data()
library(dslabs)
data(heights)
str(heights)
source("temp.R")
fun1()
source("temp.R")
fun1()
source("temp.R")
fun1()
source("temp.R")
fun1()
data("gapminder")
gapminder %>% filter(year==2015 & country %in% c("South Korea","Turkey")) %>% select(country, infant_mortality)
source("temp.R")
fun2()
source("temp.R")
fun2()
source("temp.R")
fun2()
source("temp.R")
fun2()
source("temp.R")
fun2()
source("temp.R")
fun2()
source("temp.R")
fun3()
func3()
source("temp.R")
source("temp.R")
func3()
source("temp.R")
func3()
source("temp.R")
func3()
source("temp.R")
func3()
source("temp.R")
ex_density1()
source("Week4.R")
ex_density1()
past_year <- 1970
present_year <- 2010
years <- c(past_year,present_year)
s <- gapminder %>% mutate(dollar_per_gdp=gdp/population/365)
s <- filter(s,years %in% years)
s <- filter(s,year %in% years)
p <- ggplot(s, aes(dollars_per_day))
p <- p + scale_x_continuous()
p
s <- gapminder %>% mutate(dollar_per_day=gdp/population/365)
s <- filter(s,years %in% years)
s <- filter(s,year %in% years)
p <- ggplot(s, aes(dollars_per_day))
p <- p + scale_x_continuous()
p
gapminder <- mutate(dollars_per_day=gdp/population/365)
gapminder <- mutate(gapminder,dollars_per_day=gdp/population/365)
head(gapminder)
s <- filter(gapminder, year %in% years)
p <- ggplot(s, aes(dollars_per_day))
p <- p + scale_x_continuous()
p
p <- p + geom_density(alpha=0.2)
p
source("Week4.R")
ex_comp_dist()
ex_stratify()
ex_trans2()
str(gapminder)
s <- gapminder %>% filter(year==past_year & !is.na(gdp))
p <- ggplot(s, aes(dollars_per_day))
p <- p + geom_density() + scale_x_continuous()
p
ex_trans2()
p <- ggplot(s, aes(dollars_per_day))
p <- p + geom_density() + scale_x_continuous(trans="log2")
p
s <- gapminder %>% filter(year==ptrdrmy_year & !is.na(gdp))
p <- ggplot(s, aes(dollars_per_day))
p <- p + geom_density() + scale_x_continuous(trans="log2")
p
s <- gapminder %>% filter(year==present_year & !is.na(gdp))
p <- ggplot(s, aes(dollars_per_day))
p <- p + geom_density() + scale_x_continuous(trans="log2")
p
source("temp.R")
func4()
source("temp.R")
func4()
source("temp.R")
func4()
source("temp.R")
func4()
str(s)
source("temp.R")
func4()
func4_1 <- function() {}
func4_1 <- function() {
gapminder <- gapminder %>% mutate(dollars_per_day=gdp/population/365)
years <- c(1970, 2010)
country1 <- filter(gapminder,year==1970) %>% .$country
country2 <- filter(gapminder,year==2010) %>% .$country
countries <- intersect(country1,country2)
s <- gapminder %>% filter(year==1970 & country %in% countries)
length(s$country)
}
func4_1()
